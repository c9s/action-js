// Generated by CoffeeScript 1.9.3
(function() {
  var ActionBootstrapHighlight,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ActionBootstrapHighlight = (function(superClass) {
    extend(ActionBootstrapHighlight, superClass);

    function ActionBootstrapHighlight() {
      return ActionBootstrapHighlight.__super__.constructor.apply(this, arguments);
    }

    ActionBootstrapHighlight.prototype.init = function(action) {
      var that;
      this.action = action;
      this.form = action.form().get(0);
      that = this;
      return $(action).bind('action.on_result', function(ev, resp) {
        console.log("Response ", resp);
        that.cleanup();
        return that.fromValidations(resp.validations);
      });
    };

    ActionBootstrapHighlight.prototype.fromValidations = function(validations) {
      var field, validation;
      for (field in validations) {
        validation = validations[field];
        if (validation.valid === false) {
          this.addError(field, validation.message || validation.desc);
        } else {
          this.addSuccess(field, validation.message || validation.desc);
        }
      }
    };

    ActionBootstrapHighlight.prototype.addError = function(field, message) {
      var $fieldInput, $formGroup;
      if (this.form[field]) {
        $fieldInput = $(this.form[field]);
        $formGroup = $($fieldInput.parents('.form-group').get(0));
        $fieldInput.after($('<span aria-hidden="true"/>').addClass('glyphicon glyphicon-remove form-control-feedback'));
        $fieldInput.after($('<span class="sr-only"/>').text('error'));
        if (message) {
          $fieldInput.after($('<span/>').addClass('help-block help-block-validation').text(message));
        }
        $formGroup.addClass('has-error');
      }
    };

    ActionBootstrapHighlight.prototype.addWarning = function(field, message) {
      var $fieldInput, $formGroup;
      if (this.form[field]) {
        $fieldInput = $(this.form[field]);
        $formGroup = $($fieldInput.parents('.form-group').get(0));
        $fieldInput.after($('<span aria-hidden="true"/>').addClass('glyphicon glyphicon-warning-sign form-control-feedback'));
        $fieldInput.after($('<span class="sr-only"/>').text('warning'));
        if (message) {
          $fieldInput.after($('<span/>').addClass('help-block help-block-validation').text(message));
        }
        $formGroup.addClass('has-warning');
      }
    };

    ActionBootstrapHighlight.prototype.addSuccess = function(field, message) {
      var $fieldInput, $formGroup;
      if (this.form[field]) {
        $fieldInput = $(this.form[field]);
        $formGroup = $($fieldInput.parents('.form-group').get(0));
        $fieldInput.after($('<span aria-hidden="true"/>').addClass('glyphicon glyphicon-warning-ok form-control-feedback'));
        $fieldInput.after($('<span class="sr-only"/>').text('success'));
        if (message) {
          $fieldInput.after($('<span/>').addClass('help-block help-block-validation').text(message));
        }
        $formGroup.addClass('has-success');
      }
    };

    ActionBootstrapHighlight.prototype.cleanup = function() {
      var $formGroup, el, field;
      for (field in this.form) {
        el = this.form[field];
        if (el instanceof Node && el.nodeName === 'INPUT') {
          $formGroup = $($(el).parents('.form-group').get(0));
          $formGroup.removeClass('has-error has-success has-warning');
          $formGroup.find('.glyphicon').remove();
          $formGroup.find('.sr-only').remove();
          $formGroup.find('.help-block-validation').remove();
        }
      }
    };

    ActionBootstrapHighlight.prototype.getFirstInvalidField = function() {
      return $(this.form).find('.has-error, .has-warning').get(0);
    };

    return ActionBootstrapHighlight;

  })(ActionPlugin);

  window.ActionBootstrapHighlight = ActionBootstrapHighlight;

}).call(this);
